{"version":3,"sources":["components/Modal.tsx","components/Config/OldTable.tsx","components/RequestPortal.tsx","components/Setttings/Table.tsx","pages/Settings.tsx","components/RequestStats.tsx","pages/History.tsx","components/Header.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Modal","props","useState","data","url","setUrl","clients","setClient","method","setMethod","time","setTime","keepAlive","connection","setConnection","api","hitAPi","postData","setPostData","methodComp","className","onChange","e","target","value","placeholder","type","name","id","parseInt","xmlns","viewBox","d","onClick","requestBody","JSON","parse","setModal","callApi","URL","process","console","log","Table","result","setResult","history","useHistory","useEffect","axios","get","then","response","table","uid","push","pathname","setModalData","callHistory","map","row","index","generateRow","RequestPortal","setLoading","modal","modalData","modalButton","post","this","React","Component","disconnectNode","connectedNode","topic","serverIP","Date","created","toString","setData","apiCall","creteServerButton","RequestStats","loader","loading","requestUrl","numFormate","totalRequests","sucessRequests","failedRequest","networkFailed","perSecond","convertToMb","readThroughput","writeThroughput","totalTime","PureComponent","num","toFixed","History","params","useParams","Header","src","alt","to","path","Settings","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d6898718.chunk.js","sourcesContent":["import React, { Component, useState } from 'react';\nimport axios from 'axios';\n\n\n\n// let URL = 'http://35.154.34.85:1880/history'\n\n// import RequestStats from './RequestStats';\n\nfunction Modal(props) {\n\n  const [url, setUrl] = useState(props.data ? props.data.url : '');\n  const [clients, setClient] = useState<number>(props.data ? props.data.clients : 0);\n  const [method, setMethod] = useState<string>(props.data ? props.data.method : '');\n  const [time, setTime] = useState<number>(props.data ? props.data.time : 0);\n  const [connection, setConnection] = useState<string>(props.data ? props.data.keepAlive ? \"Keep-Alive\" : \"\" : \"\");\n\n  const [api, hitAPi] = useState<boolean>(false);\n  const [postData, setPostData] = useState<string>('');\n\n// \n\n  const sayHello = () => {\n      let keepAlive = connection === 'Keep-Alive' ? true : false;\n    const requestBody = {\n      url,\n      clients,\n      time,\n      method,\n      postData,\n      keepAlive\n    };\n    \n\n    if(postData){\n        try{\n        var data = JSON.parse(postData)\n        }catch(e){\n            hitAPi(true)\n            return;\n        }\n    }\n    props.setModal(false);\n    props.callApi(requestBody)\n  };\n\n  const closeModal = () => {\n    props.setModal(false);\n  };\n\n  let messageFormate = \"Json formate is not valid\"\n  let methodComp =\n    method == 'POST' ||  method == 'PUT' ? (\n      <div className='md:flex-1 mt-2 mb:mt-0 md:px-3'>\n          {api ? messageFormate : \"\"}\n        <textarea className='w-full shadow-inner p-4 border-0'   onChange={e => setPostData(e.target.value)} placeholder='Please add proper json formate.'></textarea>\n      </div>\n    ) : (\n      ''\n    );\n  return (\n    <div className='h-1/2'>\n      <div className='fixed pin w-full flex items-center'>\n        <div className='fixed pin bg-black opacity-75 z-10'></div>\n\n        <div className='relative mx-6 md:mx-auto w-full md:w-1/2 lg:w-1/3 z-20 m-8'>\n          <div className='shadow-lg bg-white rounded-lg p-8'>\n            <h1 className='text-center text-2xl text-green-dark'>New Test Suite</h1>\n\n            <form className='pt-6 pb-2 my-2'>\n              <div className='mb-4'>\n                <input\n                  type='text'\n                  name=''\n                  value={url}\n                  id=''\n                  placeholder='Enter Url'\n                  onChange={e => setUrl(e.target.value)}\n                  className='shadow appearance-none border rounded w-full py-2 px-3 text-grey-darker mb-3'\n                />\n              </div>\n              <div className='mb-6'>\n                <input\n                  type='number'\n                  name='sd'\n                  id='asd'\n                  value={clients}\n                  placeholder='Concurrent Request'\n                  className='shadow appearance-none border rounded w-full py-2 px-3 text-grey-darker mb-3'\n                  onChange={e => setClient(parseInt(e.target.value))}\n                />\n              </div>\n              <div className='mb-6'>\n                <input\n                  type='number'\n                  name='sd'\n                  id='asd'\n                  value={time}\n                  placeholder='Time In Secons'\n                  className='shadow appearance-none border rounded w-full py-2 px-3 text-grey-darker mb-3'\n                  onChange={e => setTime(parseInt(e.target.value))}\n                />\n              </div>\n              <div className='relative inline-flex  w-full'>\n                <svg\n                  className='w-2 h-2 absolute top-0 right-0 m-4 pointer-events-none'\n                  xmlns='http://www.w3.org/2000/svg'\n                  viewBox='0 0 412 232'\n                >\n                  <path d='M206 171.144L42.678 7.822c-9.763-9.763-25.592-9.763-35.355 0-9.763 9.764-9.763 25.592 0 35.355l181 181c4.88 4.882 11.279 7.323 17.677 7.323s12.796-2.441 17.678-7.322l181-181c9.763-9.764 9.763-25.592 0-35.355-9.763-9.763-25.592-9.763-35.355 0L206 171.144z' />\n                </svg>\n                <select\n                  value={connection}\n                  className='border border-gray-300 rounded-full w-full text-gray-600 h-10 pl-5 pr-10 bg-white hover:border-gray-400 focus:outline-none appearance-none'\n                  onChange={e => setConnection(e.target.value)}\n                >\n                  <option>Select Connection Type</option>\n                  <option>Keep-Alive</option>\n                  <option>Normal</option>\n                </select>\n              </div>\n              <div className=' mt-7  relative inline-flex  w-full'>\n                <svg\n                  className='w-2 h-2 absolute top-0 right-0 m-4 pointer-events-none'\n                  xmlns='http://www.w3.org/2000/svg'\n                  viewBox='0 0 412 232'\n                >\n                  <path d='M206 171.144L42.678 7.822c-9.763-9.763-25.592-9.763-35.355 0-9.763 9.764-9.763 25.592 0 35.355l181 181c4.88 4.882 11.279 7.323 17.677 7.323s12.796-2.441 17.678-7.322l181-181c9.763-9.764 9.763-25.592 0-35.355-9.763-9.763-25.592-9.763-35.355 0L206 171.144z' />\n                </svg>\n                <select\n                  value={method}\n                  className='border border-gray-300 rounded-full w-full text-gray-600 h-10 pl-5 pr-10 bg-white hover:border-gray-400 focus:outline-none appearance-none'\n                  onChange={e => setMethod(e.target.value)}\n                >\n                  <option>Select Mathod</option>\n                  <option>GET</option>\n                  <option>POST</option>\n                  <option>DELETE</option>\n                  <option>PUT</option>\n                </select>\n              </div>\n\n            \n              {methodComp}\n              {/* <div>\n          <label className=\"block text-sm font-medium text-gray-700\">\n            Cover photo\n          </label>\n          <div className=\"mt-1 flex justify-center px-6 pt-5 pb-6 border-2 border-gray-300 border-dashed rounded-md\">\n            <div className=\"space-y-1 text-center\">\n              <svg className=\"mx-auto h-12 w-12 text-gray-400\" stroke=\"currentColor\" fill=\"none\" viewBox=\"0 0 48 48\" aria-hidden=\"true\">\n                <path d=\"M28 8H12a4 4 0 00-4 4v20m32-12v8m0 0v8a4 4 0 01-4 4H12a4 4 0 01-4-4v-4m32-4l-3.172-3.172a4 4 0 00-5.656 0L28 28M8 32l9.172-9.172a4 4 0 015.656 0L28 28m0 0l4 4m4-24h8m-4-4v8m-12 4h.02\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n              </svg>\n              <div className=\"flex text-sm text-gray-600\">\n                <label htmlFor=\"file-upload\" className=\"relative cursor-pointer bg-white rounded-md font-medium text-indigo-600 hover:text-indigo-500 focus-within:outline-none focus-within:ring-2 focus-within:ring-offset-2 focus-within:ring-indigo-500\">\n                  <span>Upload a file</span>\n                  <input id=\"file-upload\" name=\"file-upload\" type=\"file\" className=\"sr-only\"/>\n                </label>\n                <p className=\"pl-1\">or drag and drop post data file</p>\n              </div>\n              <p className=\"text-xs text-gray-500\">\n                PNG, JPG, GIF up to 10MB\n              </p>\n            </div>\n          </div> \n        </div> */}\n              <div className='block md:flex justify-between items-center '>\n                <button\n                  type='button'\n                  onClick={sayHello}\n                  className='w-1/3 rounded-full  mt-4 lg-4 bg-blue-600 hover:bg-blue-500  text-white font-semibold p-3'\n                >\n                  Submit\n                </button>\n                <button\n                  type='button'\n                  onClick={closeModal}\n                  className='w-1/3 rounded-full  mt-4 lg-4 bg-red-600 hover:bg-red-500 text-white font-semibold p-3'\n                >\n                  Close\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Modal;\n","import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { useHistory } from 'react-router-dom';\nconst URL = process.env.REACT_APP_API ? process.env.REACT_APP_API : 'http://localhost:8080';\n\nconsole.log('url::::::::', URL);\nfunction Table(props) {\n  const [result, setResult] = useState<[] | null>(null);\n  const history = useHistory();\n  useEffect(() => {\n    axios.get(`${URL}/config`).then(response => {\n      setResult(response.data);\n    });\n  }, []);\n  const callHistory = uid => {\n    console.log('Call hsotry', uid);\n    history.push({ pathname: `/history/${uid}`, id: uid });\n  };\n\n  return (\n    <div className='flex justify-center container mx-auto px-4 sm:px-8'>{result ? table(result, callHistory, props.setModalData) : ''}</div>\n  );\n}\nexport default Table;\n\nfunction table(props, callHistory, setModalData) {\n  return (\n    <div className='py-8'>\n      <div>\n        <h2 className='text-2xl font-semibold leading-tight'>Result</h2>\n      </div>\n      <div className='-mx-4 sm:-mx-8 px-4 sm:px-8 py-4 overflow-x-auto'>\n        <div className='inline-block min-w-full shadow rounded-lg overflow-hidden'></div>\n        <table className='min-w-full leading-normal'>\n          <thead>\n            <tr>\n              <th className='px-5 py-3 border-b-2 border-gray-200 bg-gray-100 text-center text-xs font-semibold text-gray-600 uppercase tracking-wider'>\n                #\n              </th>\n              {/* <th className=\"px-5 py-3 border-b-2 border-gray-200 bg-gray-100 text-center text-xs font-semibold text-gray-600 uppercase tracking-wider\">\n                Uid\n              </th> */}\n              <th className='px-5 py-3 border-b-2 border-gray-200 bg-gray-100 text-center text-xs font-semibold text-gray-600 uppercase tracking-wider'>\n                Url\n              </th>\n\n              <th className='px-5 py-3 border-b-2 border-gray-200 bg-gray-100 text-center text-xs font-semibold text-gray-600 uppercase tracking-wider'>\n                Clients\n              </th>\n              <th className='px-5 py-3 border-b-2 border-gray-200 bg-gray-100 text-center text-xs font-semibold text-gray-600 uppercase tracking-wider'>\n                Time\n              </th>\n              {/* <th className=\"px-5 py-3 border-b-2 border-gray-200 bg-gray-100 text-center text-xs font-semibold text-gray-600 uppercase tracking-wider\">\n                Status\n              </th> */}\n              <th className='px-5 py-3 border-b-2 border-gray-200 bg-gray-100 text-center text-xs font-semibold text-gray-600 uppercase tracking-wider'>\n                Open Result\n              </th>\n              <th className='px-5 py-3 border-b-2 border-gray-200 bg-gray-100 text-center text-xs font-semibold text-gray-600 uppercase tracking-wider'>\n                Edit Service\n              </th>\n              <th className='px-5 py-3 border-b-2 border-gray-200 bg-gray-100 text-center text-xs font-semibold text-gray-600 uppercase tracking-wider'>\n                Delete Service\n              </th>\n            </tr>\n          </thead>\n          <tbody>{props.map((row, index) => generateRow(row, index, callHistory, setModalData))}</tbody>\n        </table>\n      </div>\n    </div>\n  );\n}\n\nfunction generateRow(row, index, callHistory, setModalData) {\n  return (\n    <tr key={row.uid}>\n      <td className='px-6 py-4 whitespace-nowrap'>\n        <div className='text-sm text-gray-500'>{index + 1}</div>\n      </td>\n      {/* <td className=\"px-6 py-4 whitespace-nowrap\">\n      <div className=\"text-sm text-gray-500\">{row.uid}</div>\n    </td> */}\n      <td className='px-6 py-4 whitespace-nowrap'>\n        <div className='flex items-center'>\n          {/* <div className=\"flex-shrink-0 h-10 w-10\">\n          <img className=\"h-10 w-10 rounded-full\" src=\"https://images.unsplash.com/photo-1494790108377-be9c29b29330?ixlib=rb-1.2.1&amp;ixid=eyJhcHBfaWQiOjEyMDd9&amp;auto=format&amp;fit=facearea&amp;facepad=4&amp;w=256&amp;h=256&amp;q=60\" alt=\"\" />\n        </div> */}\n          <div className='ml-4'>\n            <div className='text-sm text-gray-500'>\n              <span className='px-2 inline-flex text-xs leading-5 font-semibold  bg-green-100 text-green-800'>{row.method}</span>\n              <span className='px-2 inline-flex text-xs leading-5 font-semibold  text-green-800'>{row.url}</span>\n            </div>\n          </div>\n        </div>\n      </td>\n      <td className='px-6 py-4 whitespace-nowrap'>\n        {/* <div className=\"text-sm text-gray-900\">Regional Paradigm Technician</div> */}\n        <div className='text-sm text-gray-500'>{row.clients}</div>\n      </td>\n      <td className='px-6 py-4 whitespace-nowrap'>\n        <div className='text-sm text-gray-500'>{row.time} Seconds</div>\n      </td>\n      {/* <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n    <span className=\"px-2 inline-flex text-xs leading-5 font-semibold  bg-green-200 text-green-800\">\n        Active\n      </span>\n    </td> */}\n      <td className='px-6 py-4 whitespace-nowrap text-right text-sm font-medium'>\n        <button onClick={() => callHistory(row.uid)}>\n          <span className='px-2 inline-flex text-xs leading-5 font-semibold rounded-full bg-green-200 hover:bg-green-500  hover:text-white  text-green-800'>\n            Open\n          </span>\n        </button>\n      </td>\n      <td className='px-6 py-4 whitespace-nowrap text-right text-sm font-medium'>\n        <button onClick={() => setModalData(row)}>\n          <span className='px-2 inline-flex text-xs leading-5 font-semibold rounded-full bg-indigo-200 hover:bg-indigo-500 hover:text-white text-white-800'>\n            Edit\n          </span>\n        </button>\n      </td>\n      <td className='px-6 py-4 whitespace-nowrap text-right text-sm font-medium'>\n        <button>\n          <span className='px-2 inline-flex text-xs leading-5 font-semibold rounded-full bg-red-300 hover:bg-red-500 hover:text-white text-white-800'>\n            Delete\n          </span>\n        </button>\n      </td>\n    </tr>\n  );\n}\n\nfunction numFormate(num) {\n  if (num > 999 && num < 1000000) {\n    return (num / 1000).toFixed(2) + 'K'; // convert to K for number from > 1000 < 1 million\n  } else if (num > 1000000) {\n    return (num / 1000000).toFixed(2) + 'M'; // convert to M for number from > 1 million\n  } else if (num < 900) {\n    return num; // if value < 1000, nothing to do\n  }\n}\nfunction convertToMb(num) {\n  return (num / 1024).toFixed(1);\n}\n","import React, { Component, useState, useEffect } from 'react';\nimport axios from 'axios';\nconst URL = process.env.REACT_APP_API ? process.env.REACT_APP_API : 'http://localhost:8080';\n// let URL = 'http://35.154.34.85:1880/history'\n\n// import RequestStats from './RequestStats';\n// import Stats from './Stats';\n\nimport Modal from './Modal';\nimport Table from './Config/OldTable';\n\nfunction RequestPortal() {\n  const [loading, setLoading] = useState(false);\n  const [modal, setModal] = useState(false);\n  const [modalData, setModalData] = useState<[] | null>(null);\n  const [result, setResult] = useState<[] | null>(null);\n  const [configs, setConfigs] = useState<[] | null>(null);\n\n  const callApi = requestBody => {\n    setLoading(true);\n    axios.post(`${URL}/request`, requestBody).then(response => {\n      console.log(requestBody);\n      setResult(response.data);\n      setLoading(false);\n    });\n  };\n  const modelDataCall = row => {\n    // console.log(\"called data modelDataCall\",row)\n    setModalData(row);\n    setModal(true);\n  };\n  const modalButton = (\n    <button type='button' onClick={() => setModal(true)} className='mt-10 w-80 bg-blue-600 hover:bg-blue-500 text-white font-semibold p-3'>\n      New Test Request\n    </button>\n  );\n  return (\n    <>\n      {/* <Stats/> */}\n      {modal ? <Modal callApi={callApi} setModal={setModal} data={modalData} /> : modalButton}\n      {/* <RequestStats data={result || ''} loading={loading} /> */}\n      <Table setModalData={modelDataCall} />\n    </>\n  );\n}\n\nexport default RequestPortal;\n","import React from 'react';\n// import axios from 'axios'\nclass Table extends React.Component<any, boolean> {\n  render() {\n    console.log('this.props :::', this.props);\n    const loader = <div className='loader ease-linear rounded-full border-8 border-t-8 border-gray-200 h-20 w-20' />;\n\n    return <div className='flex justify-center container mx-auto px-4 sm:px-8'>{table(this.props)}</div>;\n  }\n}\nexport default Table;\n\nfunction table(props) {\n  console.log('called table', props.data);\n\n  return (\n    <div className='py-8'>\n      <div>\n        <h2 className='text-2xl font-semibold leading-tight'>Server Information</h2>\n      </div>\n      <div className='-mx-4 sm:-mx-8 px-4 sm:px-8 py-4 overflow-x-auto'>\n        <div className='inline-block min-w-full shadow rounded-lg overflow-hidden'></div>\n        <table className='min-w-full leading-normal'>\n          <thead>\n            <tr>\n              <th className='px-5 py-3 border-b-2 border-gray-200 bg-gray-100 text-center text-xs font-semibold text-gray-600 uppercase tracking-wider'>\n                #\n              </th>\n              <th className='px-5 py-3 border-b-2 border-gray-200 bg-gray-100 text-center text-xs font-semibold text-gray-600 uppercase tracking-wider'>\n                Topic\n              </th>\n\n              <th className='px-5 py-3 border-b-2 border-gray-200 bg-gray-100 text-center text-xs font-semibold text-gray-600 uppercase tracking-wider'>\n                ServerIP\n              </th>\n              <th className='px-5 py-3 border-b-2 border-gray-200 bg-gray-100 text-center text-xs font-semibold text-gray-600 uppercase tracking-wider'>\n                Status\n              </th>\n              <th className='px-5 py-3 border-b-2 border-gray-200 bg-gray-100 text-center text-xs font-semibold text-gray-600 uppercase tracking-wider'>\n                Time\n              </th>\n              {/* <th className=\"px-5 py-3 border-b-2 border-gray-200 bg-gray-100 text-center text-xs font-semibold text-gray-600 uppercase tracking-wider\">\n                Status\n              </th> */}\n              <th className='px-5 py-3 border-b-2 border-gray-200 bg-gray-100 text-center text-xs font-semibold text-gray-600 uppercase tracking-wider'>\n                Copy\n              </th>\n              <th className='px-5 py-3 border-b-2 border-gray-200 bg-gray-100 text-center text-xs font-semibold text-gray-600 uppercase tracking-wider'>\n                Delete Service\n              </th>\n            </tr>\n          </thead>\n          <tbody>{props.data.map((row, index) => generateRow(row, index))}</tbody>\n        </table>\n      </div>\n    </div>\n  );\n}\n\nfunction generateRow(row, index) {\n  const disconnectNode = <span className='px-2 inline-flex text-xs leading-5 font-semibold  bg-red-200 text-red-800'>Disconnected</span>;\n  const connectedNode = <span className='px-2 inline-flex text-xs leading-5 font-semibold  bg-green-200 text-green-800'>Connected</span>;\n  return (\n    <tr>\n      <td className='px-6 py-4 whitespace-nowrap'>\n        {/* <div className=\"text-sm text-gray-900\">Regional Paradigm Technician</div> */}\n        <div className='text-sm text-gray-500'>{index + 1}</div>\n      </td>\n      <td className='px-6 py-4 whitespace-nowrap'>\n        <div className='ml-4'>\n          <div className='text-sm text-gray-500'>{row.topic}</div>\n        </div>\n      </td>\n      <td className='px-6 py-4 whitespace-nowrap'>\n        {/* <div className=\"text-sm text-gray-900\">Regional Paradigm Technician</div> */}\n        <div className='text-sm text-gray-500'>{row.serverIP ? row.serverIP : 'Not Assined'}</div>\n      </td>\n      <td className='px-6 py-4 whitespace-nowrap text-sm text-gray-500'>{row.serverIP ? connectedNode : disconnectNode}</td>\n      <td className='px-6 py-4 whitespace-nowrap text-sm text-gray-500'>{new Date(row.created).toString()}</td>\n\n      <td className='px-6 py-4 whitespace-nowrap text-right text-sm font-medium'>\n        <button>\n          <span className='px-2 inline-flex text-xs leading-5 font-semibold rounded-full bg-indigo-200 hover:bg-indigo-500 hover:text-white text-white-800'>\n            Edit\n          </span>\n        </button>\n      </td>\n      <td className='px-6 py-4 whitespace-nowrap text-right text-sm font-medium'>\n        <button>\n          <span className='px-2 inline-flex text-xs leading-5 font-semibold rounded-full bg-red-300 hover:bg-red-500 hover:text-white text-white-800'>\n            Delete\n          </span>\n        </button>\n      </td>\n    </tr>\n  );\n}\n\nfunction numFormate(num) {\n  if (num > 999 && num < 1000000) {\n    return (num / 1000).toFixed(2) + 'K'; // convert to K for number from > 1000 < 1 million\n  } else if (num > 1000000) {\n    return (num / 1000000).toFixed(2) + 'M'; // convert to M for number from > 1 million\n  } else if (num < 900) {\n    return num; // if value < 1000, nothing to do\n  }\n}\nfunction convertToMb(num) {\n  return (num / 1024).toFixed(1);\n}\n","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nconst URL = process.env.REACT_APP_API ? process.env.REACT_APP_API : 'http://localhost:8080';\n\n// let URL = 'http://35.154.34.85:1880/history'\n\nimport Modal from '../components/Modal';\n\nimport Table from '../components/Setttings/Table';\n\nfunction RequestPortal() {\n  const [data, setData] = useState(null);\n  const [result, setResult] = useState<[] | null>(null);\n\n  const createServer = () => {\n    axios.post(`${URL}/server`).then(response => {\n      // setResult(response.data);\n      apiCall(setResult);\n    });\n  };\n  useEffect(() => {\n    apiCall(setResult);\n    // setInterval(() => {\n    //   apiCall(setResult)\n    // },10000)\n  }, []);\n\n  const creteServerButton = (\n    <button type='button' onClick={() => createServer()} className='mt-10 w-80 bg-blue-600 hover:bg-blue-500 text-white font-semibold p-3'>\n      Create New Server\n    </button>\n  );\n  // let openModal = () => {\n  //   setLoading(true)\n  // }\n\n  // let closeModal = () => {\n  //   setLoading(false)\n  // }\n  // const modalButton = (\n  //   <button type='button' onClick={() => setModal(true)} className='w-80 bg-blue-600 hover:bg-blue-500 text-white font-semibold p-3'>\n  //     New Test Request\n  //   </button>\n  // );\n  return (\n    <>\n      {creteServerButton}\n      {result ? <Table data={result} setData={setData} /> : ''}\n      {/* {data  ? <Modal callApi={callApi} data={data}  closeModal={closeModal} /> : ''} */}\n    </>\n  );\n}\n\nexport default RequestPortal;\n\nfunction apiCall(setResult) {\n  axios.get(`${URL}/server`).then(response => {\n    console.log(response.data);\n    setResult(response.data);\n  });\n}\n","import React from 'react';\n\n// import axios from 'axios'\nclass RequestStats extends React.PureComponent<any, boolean> {\n  render() {\n    const loader = (\n      <div className=\"loader ease-linear rounded-full border-8 border-t-8 border-gray-200 h-20 w-20\" />\n    );\n\n    return (\n      <div className=\"flex justify-center container mx-auto px-4 sm:px-8\">\n        {this.props.loading ? loader : this.props.data ? table(this.props) : ''}\n      </div>\n    );\n  }\n}\nexport default RequestStats;\n\nfunction table(props) {\n  // console.log(\"called table\",props.data)\n\n  return (\n    <div className=\"py-8\">\n      <div>\n        <h2 className=\"text-2xl font-semibold leading-tight\">Result</h2>\n      </div>\n      <div className=\"-mx-4 sm:-mx-8 px-4 sm:px-8 py-4 overflow-x-auto\">\n        <div className=\"inline-block min-w-full shadow rounded-lg overflow-hidden\"></div>\n        <table className=\"min-w-full leading-normal\">\n          <thead>\n            <tr>\n            <th className=\"px-5 py-3 border-b-2 border-gray-200 bg-gray-100 text-center text-xs font-semibold text-gray-600 uppercase tracking-wider\">\n                #\n              </th>\n              <th className=\"px-5 py-3 border-b-2 border-gray-200 bg-gray-100 text-center text-xs font-semibold text-gray-600 uppercase tracking-wider\">\n                Url\n              </th>\n              {/* <th className=\"px-5 py-3 border-b-2 border-gray-200 bg-gray-100 text-center text-xs font-semibold text-gray-600 uppercase tracking-wider\">\n                Server\n              </th> */}\n              <th className=\"px-5 py-3 border-b-2 border-gray-200 bg-gray-100 text-center text-xs font-semibold text-gray-600 uppercase tracking-wider\">\n                Total Requests\n              </th>\n              <th className=\"px-5 py-3 border-b-2 border-gray-200 bg-gray-100 text-center text-xs font-semibold text-gray-600 uppercase tracking-wider\">\n                Sucess Requests\n              </th>\n              <th className=\"px-5 py-3 border-b-2 border-gray-200 bg-gray-100 text-center text-xs font-semibold text-gray-600 uppercase tracking-wider\">\n                Failed Request\n              </th>\n              <th className=\"px-5 py-3 border-b-2 border-gray-200 bg-gray-100 text-center text-xs font-semibold text-gray-600 uppercase tracking-wider\">\n                Network Failed\n              </th>\n              <th className=\"px-5 py-3 border-b-2 border-gray-200 bg-gray-100 text-center text-xs font-semibold text-gray-600 uppercase tracking-wider\">\n                Per Second\n              </th>\n              <th className=\"px-5 py-3 border-b-2 border-gray-200 bg-gray-100 text-center text-xs font-semibold text-gray-600 uppercase tracking-wider\">\n                Read Throuput\n              </th>\n              <th className=\"px-5 py-3 border-b-2 border-gray-200 bg-gray-100 text-center text-xs font-semibold text-gray-600 uppercase tracking-wider\">\n                Write Throuput\n              </th>\n              <th className=\"px-5 py-3 border-b-2 border-gray-200 bg-gray-100 text-center text-xs font-semibold text-gray-600 uppercase tracking-wider\">\n                Total Time Taken\n              </th>\n            </tr>\n          </thead>\n          <tbody>{props.data.map((data,index) => generateRow(data,index))}</tbody>\n        </table>\n      </div>\n    </div>\n  );\n}\n\nfunction generateRow(props,index) {\n  return (\n    <tr>\n       <td className=\"px-5 py-5 border-b border-gray-200 bg-white text-sm\">\n        <p className=\"text-gray-900 whitespace-no-wrap text-center\">\n          {index+1}\n        </p>\n      </td>\n      <td className=\"px-5 py-5 border-b border-gray-200 bg-white text-sm\">\n        <p className=\"text-gray-900 whitespace-no-wrap text-center\">\n          {props.requestUrl}\n        </p>\n      </td>\n      {/* <td className=\"px-5 py-5 border-b border-gray-200 bg-white text-sm\">\n        <p className=\"text-gray-900 whitespace-no-wrap text-center\">\n          {props.responder}\n        </p>\n      </td> */}\n      <td className=\"px-5 py-5 border-b border-gray-200 bg-white text-sm\">\n        <p className=\"text-gray-900 whitespace-no-wrap text-center\">\n          {numFormate(props.totalRequests)}\n        </p>\n      </td>\n      <td className=\"px-5 py-5 border-b border-gray-200 bg-white text-sm\">\n        <p className=\"text-gray-900 whitespace-no-wrap text-center\">\n          {numFormate(props.sucessRequests)}\n        </p>\n      </td>\n      <td className=\"px-5 py-5 border-b border-gray-200 bg-white text-sm\">\n        <p className=\"text-gray-900 whitespace-no-wrap text-center\">\n          {numFormate(props.failedRequest)}\n        </p>\n      </td>\n      <td className=\"px-5 py-5 border-b border-gray-200 bg-white text-sm\">\n        <p className=\"text-gray-900 whitespace-no-wrap text-center\">\n          {numFormate(props.networkFailed)}\n        </p>\n      </td>\n      <td className=\"px-5 py-5 border-b border-gray-200 bg-white text-sm\">\n        <p className=\"text-gray-900 whitespace-no-wrap text-center\">\n          {numFormate(props.perSecond)}\n        </p>\n      </td>\n      <td className=\"px-5 py-5 border-b border-gray-200 bg-white text-sm\">\n        <p className=\"text-gray-900 whitespace-no-wrap text-center\">\n          {convertToMb(props.readThroughput)}/MBps\n        </p>\n      </td>\n      <td className=\"px-5 py-5 border-b border-gray-200 bg-white text-sm\">\n        <p className=\"text-gray-900 whitespace-no-wrap text-center\">\n          {convertToMb(props.writeThroughput)}/MBps\n        </p>\n      </td>\n      <td className=\"px-5 py-5 border-b border-gray-200 bg-white text-sm\">\n        <p className=\"text-gray-900 whitespace-no-wrap text-center\">\n          {props.totalTime} seconds\n        </p>\n      </td>\n    </tr>\n  );\n}\n\nfunction numFormate(num) {\n  if (num > 999 && num < 1000000) {\n    return (num / 1000).toFixed(2) + 'K'; // convert to K for number from > 1000 < 1 million\n  } else if (num > 1000000) {\n    return (num / 1000000).toFixed(2) + 'M'; // convert to M for number from > 1 million\n  } else if (num < 900) {\n    return num; // if value < 1000, nothing to do\n  }\n}\nfunction convertToMb(num) {\n  return (num / 1024).toFixed(1)\n}\n","import React, { useEffect, useState } from 'react';\nimport RequestStats from '../components/RequestStats';\nimport { useParams } from 'react-router-dom';\n\nimport axios from 'axios';\n// let URL = 'http://35.154.34.85:1880/history'\nconst URL = process.env.REACT_APP_API ? process.env.REACT_APP_API : 'http://localhost:8080';\n\nfunction History(props) {\n  const params = useParams();\n  const [result, setResult] = useState<[] | null>(null);\n  const [loading, setLoading] = useState(false);\n  const count = 0;\n  useEffect(() => {\n    axios.get(`${URL}/history/${params.uid}`).then(response => {\n      // console.log(response.data);\n      setResult(response.data);\n      setLoading(false);\n    });\n  }, []);\n\n  return <RequestStats data={result} loading={loading}></RequestStats>;\n}\nexport default History;\n","import React from 'react';\n// import './App.css';\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\nimport RequestPortal from './RequestPortal';\nimport Settings from '../pages/Settings';\n\nimport History from '../pages/History';\n\n\nfunction Header() {\n  return (\n    <Router>\n\t\t<>\n      <nav className=\"bg-gray-800\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"flex items-center justify-between h-16\">\n            <div className=\"flex items-center\">\n              <div className=\"flex-shrink-0\">\n                <img\n                  className=\"h-8 w-8\"\n                  src=\"https://tailwindui.com/img/logos/workflow-mark-indigo-500.svg\"\n                  alt=\"Workflow\"\n                />\n              </div>\n              <div className=\"hidden md:block\">\n                <div className=\"ml-10 flex items-baseline space-x-4\">\n                  <Link\n\t\t\t\t  to=\"/\"\n                    className=\"bg-gray-900 text-white px-3 py-2 rounded-md text-sm font-medium\"\n                  >\n                    Dashboard\n                  </Link>\n\n                  <Link\n                    to=\"/history/0\"\n                    className=\"text-gray-300 hover:bg-gray-700 hover:text-white px-3 py-2 rounded-md text-sm font-medium\"\n                  >\n                    Past Performance\n                  </Link>\n                  <Link\n                    to=\"/settings\"\n                    className=\"text-gray-300 hover:bg-gray-700 hover:text-white px-3 py-2 rounded-md text-sm font-medium\"\n                  >\n                    Settings\n                  </Link>\n                  {/* \n              <a href=\"#\" className=\"text-gray-300 hover:bg-gray-700 hover:text-white px-3 py-2 rounded-md text-sm font-medium\">Projects</a>\n\n              <a href=\"#\" className=\"text-gray-300 hover:bg-gray-700 hover:text-white px-3 py-2 rounded-md text-sm font-medium\">Calendar</a>\n\n              <a href=\"#\" className=\"text-gray-300 hover:bg-gray-700 hover:text-white px-3 py-2 rounded-md text-sm font-medium\">Reports</a> */}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </nav>\n      {/* <header className=\"bg-white shadow\">\n        <div className=\"max-w-7xl mx-auto py-6 px-4 sm:px-6 lg:px-8\">\n          <h1 className=\"text-3xl font-bold text-gray-900\">Testing</h1>\n        </div>\n      </header> */}\n      <Switch>\n\t  \t<Route path=\"/history/:uid\">\n          <History />\n        </Route>\n        <Route path=\"/settings\">\n          <Settings />\n        </Route>\n        <Route path=\"/\">\n          <RequestPortal />\n        </Route>\t\n      </Switch>\n\t  </>\n    </Router>\n  );\n}\n\nexport default Header;\n","import React from 'react';\nimport Header from './components/Header';\nimport RequestPortal from './components/RequestPortal';\n\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}